sourceCompatibility = 1.8
sourceSets.main.java.srcDirs = [ "src/" ]
sourceSets.main.resources.srcDirs = ["../core/assets"]

project.ext.mainClassName = "com.tangledwebgames.masterofdoors.desktop.DesktopLauncher"
project.getConvention().getPlugin(ApplicationPluginConvention.class).setMainClassName(project.mainClassName)
project.ext.assetsDir = new File("../core/assets")

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

task runGdx(dependsOn: classes, type: JavaExec) {
    main = project.mainClassName
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    workingDir = project.assetsDir
    ignoreExitValue = true
}

task debug(dependsOn: classes, type: JavaExec) {
    main = project.mainClassName
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    workingDir = project.assetsDir
    ignoreExitValue = true
    debug = true
}

task dist(type: Jar) {
    manifest {
        attributes 'Main-Class': project.mainClassName
    }
    dependsOn configurations.runtimeClasspath
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    with jar
}

dist.dependsOn classes

parcl {
    exe {
        exeName = "gemini"
        vmArgs = ["-Xms128m", "-Xmx1500m"]
    }

    app {
        appName = "Gemini"
        icon = "extra/controller.icns"
        displayName = "My Application"
        applicationCategory = "public.app-category.role-playing-game"
        identifier = "com.tangledwebgames.masterofdoors"
        copyright = "Made 2022 by Tangled Web Games LLC; distributed under  CC BY-NC-SA 3.0 license (Attribution-NonComertial-ShareAlike)"
        vmArgs = ["-Xms128m", "-Xmx1500m"]
    }

    linux {
        binName = "myapplication"
        vmArgs = ["-Xms128m", "-Xmx1500m"]
    }
}